
#PORT settting
server.port=8080

# 소스파일에 변화가 있을 때 자동으로 서버 재 시작 설정
spring.devtools.restart.enabled=true

# 정적 리소스에 변화가 있을 때 바로 반영한다.
spring.devtools.livereload.enabled=true

# thymeleaf 참조 경로
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# thymeleaf에 대한 캐시를 남기지 않는다. cache=false 설정(운영시는 true)
spring.thymeleaf.cache=false
# templates 디렉토리에 파일이 있는지 없는지 체크, 없으면 에러를 발생시킨다.
spring.thymeleaf.check-template-location=true

#Mariadb settting
#url: jdbc:mariadb://localhost:3306/vue3-project-one-db?characterEncoding=UTF-8&serverTimezone=UTC&autoReconnect=true&allowMultiQueries=true
#?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
spring.datasource.username=gos
spring.datasource.password=gos1234

#1. 일반 DB 연결시
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://localhost:3307/testdb

# MASTER DB
#spring.master.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.master.datasource.jdbc-url=jdbc:log4jdbc:mysql://192.168.0.10:3306/MASTER?characterEncoding=UTF-8&serverTimezone=UTC
#spring.master.datasource.username={user name}
#spring.master.datasource.password={password}
#spring.master.datasource.connection-test-query=SELECT 1

# SLAVE 1 DB
#spring.slave-1.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.slave-1.datasource.jdbc-url=jdbc:log4jdbc:mysql://192.168.0.13:3306/SLAVE?characterEncoding=UTF-8&serverTimezone=UTC
#spring.slave-1.datasource.username={user name}
#spring.slave-1.datasource.password={password}
#spring.slave-1.datasource.connection-test-query=SELECT 1

#2. log4jdbc 연결하여 DB 연결시
spring.datasource.driver-class-name	= net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url = jdbc:log4jdbc:mariadb://localhost:3307/testdb?characterEncoding=UTF-8&serverTimezone=UTC
#2. 연결 여부 확인을 위한 테스트 쿼리
spring.datasource.hikari.connection-test-query=SELECT 1
#2. 로깅 대상(개발 / 배포) 배포시에는 local -> prod
spring.profiles.active=local
logging.config=classpath:logback-${spring.profiles.active}.xml
logging.level.root=info





# 매핑할 모델의 패키지 경로 (mybatis 매핑 type을 짧게 쓰기 위한 설정)
mybatis.type-aliases-package=com.gos.board.model

# mapper.xml 위치 명시
mybatis.mapper-locations=classpath:com/gos/board/mybatis/**/*.xml

#mybatis.configuration.map-underscore-to-camel-case=true
#mybatis.configuration.jdbc-type-for-null=varchar
#mybatis.type-aliases-package=com.e7e.merong.vo
#mybatis.mapper-locations=classpath:mybatis/mapper/*-Mapper.xml

# 아래도 파일업로드 용량설정이당 그냥 참고하장
# default 128K
#spring.servlet.multipart.max-file-size=10MB
#spring.servlet.multipart.max-request-size=12MB
#spring.servlet.multipart.file-size-threshold=12MB


#오류 응답에 exception의 내용을 포함할지 여부
server.error.include-exception=TRUE
#오류 응답에 stacktrace 내용을 포함할지 여부 (ALWAYS, NEVER, ON_TRACE_PARAM)
server.error.include-stacktrace=ALWAYS
#브라우저 요청에 대해 서버 오류시 기본으로 노출할 페이지를 사용할지 여부
server.error.whitelabel.enabled=FALSE

